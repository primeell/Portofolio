---
// Import semua komponen yang akan kita susun
import Layout from '../layouts/Layout.astro';
import Profile from '../components/Profile.astro';
import Certificates from '../components/Certificates.astro';
import Projects from '../components/Projects.astro';

// --- PUSAT DATA ANDA ADA DI SINI ---
const myProfile = {
  name: "Gibran El Fahmi",
  bio: "A Computer Engineering undergraduate specializing in Business Data Science and Machine Learning, passionate about creating and learning new things.",
  photo: "/Foto hima gw.JPG",
  cvLink: "/CV - Gibran El Fahmi.pdf",
  cvButtonText:  "Open CV", 
};

const myProjects =[
  {
    title: "Diabetes Prediction ",
    description: "Membuat prediksi kemungkinan seseorang terkena diabetes dengan data riwayat kesehatan.",
    link: "https://github.com/primeell/ML-predictions/blob/main/Diabetes%20Prediction%20ML.ipynb",
    tags: ["Machine Learning", "Python", "Klasifikasi"],
  },
  {
    title: "Public sentimen analysis",
    description: "Melakukan analisis sentimen pada data Twitter untuk memahami opini publik terhadap suatu topik menggunakan teknik NLP.",
    link: "https://github.com/primeell/Sentimen-analysis",
    tags: ["NLP", "Python", "Analisis Data"],
  },
  {
    title: "Past BTC price predictions",
    description: "Membuat prediksi harga bitcoin dengan menggunakan pendekatan pola masa lalu.",
    link: "https://github.com/primeell/ML-predictions/tree/main",
    tags: ["Visualisasi Data", "Business Intelligence"],
  },
];
---
<Layout title={`Portofolio | ${myProfile.name}`}>
  <main class="main-container">
    <Profile 
      name={myProfile.name}
      bio={myProfile.bio}
      photo={myProfile.photo}
      cvLink={myProfile.cvLink}
      cvButtonText={myProfile.cvButtonText} 
    />

    <div class="content-wrapper">
      <aside class="column">
        <Certificates />
      </aside>
      <section class="column">
        <Projects projects={myProjects} />
      </section>
    </div>
  </main>

  <!-- Modal untuk sertifikat -->
  <div id="modal" class="modal-overlay">
    <span class="modal-close">&times;</span>
    <img class="modal-content" id="modal-img">
  </div>

  <style is:global>
    body {
      background-color: #000; /* Black background */
      color: #ffffff;
      font-family: sans-serif;
      overflow: hidden; /* Hide scrollbars if particles go out of bounds */
    }

    /* Particle animation */
    .stars {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: transparent;
      z-index: -1; /* Behind content */
    }

    .star {
      position: absolute;
      background: white;
      border-radius: 50%;
      animation: twinkle linear infinite;
    }

    @keyframes twinkle {
      0% { opacity: 0; transform: scale(0.5); } 
      50% { opacity: 1; transform: scale(1); } 
      100% { opacity: 0; transform: scale(0.5); } 
    }

    /* Rocket styling */
    .rocket {
      position: fixed;
      bottom: -100px; /* Start off-screen */
      left: 50%;
      transform: translateX(-50%);
      width: 100px; /* Adjust size as needed */
      height: auto;
      z-index: 10;
      animation: launch 10s linear infinite; /* Rocket launch animation */
    }

    @keyframes launch {
      0% { bottom: -100px; opacity: 0; } 
      10% { bottom: 0px; opacity: 1; } 
      90% { bottom: calc(100% - 100px); opacity: 1; } /* Adjust based on rocket height */
      100% { bottom: 100%; opacity: 0; } 
    }
  </style>

  <style>
    .main-container {
      padding: 2rem 1rem;
      max-width: 1200px;
      margin: 0 auto;
    }

    .content-wrapper {
      display: flex;
      flex-direction: column;
      gap: 2rem;
    }

    @media (min-width: 768px) {
      .content-wrapper {
        flex-direction: row;
        align-items: flex-start;
      }
      .column:nth-child(1) { flex-basis: 35%; }
      .column:nth-child(2) { flex-basis: 65%; }
    }

    /* Styling untuk Modal Sertifikat */
    .modal-overlay {
      display: none;
      position: fixed;
      z-index: 100;
      left: 0; top: 0;
      width: 100%; height: 100%;
      overflow: auto;
      background-color: rgba(0,0,0,0.85);
      justify-content: center;
      align-items: center;
    }
    .modal-content {
      margin: auto;
      display: block;
      max-width: 80%;
      max-height: 80%;
    }
    .modal-close {
      position: absolute;
      top: 15px; right: 35px;
      color: #f1f1f1;
      font-size: 40px;
      font-weight: bold;
      transition: 0.3s;
      cursor: pointer;
    }
  </style>

  <script>
    // Fungsi ini akan dijalankan hanya setelah seluruh halaman HTML dimuat
    function setupModal() {
      // Cari semua elemen yang kita butuhkan
      const modal = document.getElementById("modal");
      const modalImg = document.getElementById("modal-img");
      const certificateTriggers = document.querySelectorAll(".certificate-trigger");
      const closeModalButton = document.querySelector(".modal-close");

      // PENTING: Jika salah satu elemen tidak ditemukan, hentikan script agar tidak error
      if (!modal || !modalImg || !closeModalButton || certificateTriggers.length === 0) {
        console.error("Elemen modal tidak ditemukan. Fungsionalitas sertifikat tidak akan berjalan.");
        return;
      }

      // Fungsi untuk menyembunyikan modal
      function hideModal() {
        if (modal) { // Pengecekan ekstra untuk keamanan tipe data
          modal.style.display = "none";
        }
      }

      // Tambahkan event listener untuk setiap tombol sertifikat
      certificateTriggers.forEach(trigger => {
        trigger.addEventListener("click", (event) => {
          event.preventDefault();
          if (modal) { // Pengecekan ekstra
            modal.style.display = "flex";
          }
          const imgSrc = trigger.getAttribute('data-img-src');
          // Pastikan modalImg adalah elemen gambar sebelum mengubah src
          if (imgSrc && modalImg instanceof HTMLImageElement) {
            modalImg.src = imgSrc;
          }
        });
      });

      // Tambahkan event listener untuk tombol close
      closeModalButton.addEventListener("click", hideModal);

      // Tambahkan event listener untuk klik di luar gambar
      window.addEventListener("click", (event) => {
        if (event.target === modal) {
          hideModal();
        }
      });
    }

    // Jalankan fungsi setupModal setelah seluruh halaman dimuat
    document.addEventListener("DOMContentLoaded", setupModal);
  </script>

  <div class="stars"></div>
  <img src="/rocket.png" alt="Rocket" class="rocket">

  <script>
    // Generate stars dynamically
    const starsContainer = document.querySelector('.stars');
    if (starsContainer) {
      for (let i = 0; i < 100; i++) { // Adjust number of stars as needed
        let star = document.createElement('div');
        star.className = 'star';
        star.style.width = star.style.height = `${Math.random() * 3 + 1}px`;
        star.style.left = `${Math.random() * 100}%`;
        star.style.top = `${Math.random() * 100}%`;
        star.style.animationDuration = `${Math.random() * 3 + 2}s`;
        star.style.animationDelay = `${Math.random() * 2}s`;
        starsContainer.appendChild(star);
      }
    }
  </script>
</Layout>
